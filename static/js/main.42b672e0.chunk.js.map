{"version":3,"sources":["component/Counter.js","index.js","reducers/index.js"],"names":["Counter","_this$props","this","props","value","onIncrement","onDecrement","react_default","a","createElement","onClick","Component","store","createStore","state","arguments","length","undefined","type","rootElement","document","getElementById","render","ReactDOM","src_component_Counter","getState","dispatch","text","subscribe"],"mappings":"yOAgBeA,0LAZH,IAAAC,EACoCC,KAAKC,MAAtCC,EADHH,EACGG,MAAMC,EADTJ,EACSI,YAAYC,EADrBL,EACqBK,YACzB,OACIC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,oBAAYL,GACZG,EAAAC,EAAAC,cAAA,UAAQC,QAASL,GAAjB,aACAE,EAAAC,EAAAC,cAAA,UAAQC,QAASJ,GAAjB,qBAPMK,cCGhBC,EAAQC,YCNC,WAAuB,IAAtBC,EAAsBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAd,EACpB,QADkCA,UAAAC,OAAA,EAAAD,UAAA,QAAAE,GACnBC,MACX,IAAK,YACD,OAAOJ,EAAQ,EACnB,IAAK,YACD,OAAOA,EAAQ,EACnB,QACI,OAAOA,KDAbK,EAAcC,SAASC,eAAe,QAEtCC,EAAS,kBAAMC,IAASD,OAC1Bf,EAAAC,EAAAC,cAACe,EAAD,CACIpB,MAASQ,EAAMa,WACfpB,YAAe,kBAAKO,EAAMc,SAAS,CAC/BR,KAAK,YACLS,KAAM,eAEVrB,YAAe,kBAAMM,EAAMc,SAAS,CAChCR,KAAM,YACNS,KAAM,iBAGdR,IAGJG,IAEAV,EAAMgB,UAAUN","file":"static/js/main.42b672e0.chunk.js","sourcesContent":["import React , {Component} from 'react';\nimport './Counter.css';\n\nclass Counter extends Component{\n    render(){\n        const {value,onIncrement,onDecrement} = this.props\n        return(\n            <div>\n                <h2>Count: {value}</h2>\n                <button onClick={onIncrement}>Increment</button>\n                <button onClick={onDecrement}>Decrement</button>\n            </div>\n        )\n    }\n}\n\nexport default Counter","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { createStore } from 'redux'\nimport Counter from './component/Counter'\nimport counter from './reducers'\n\nconst store = createStore(counter)\nconst rootElement = document.getElementById('root')\n\nconst render = () => ReactDOM.render(\n    <Counter\n        value = {store.getState()}\n        onIncrement = {()=> store.dispatch({\n            type:\"INCREMENT\",\n            text: \"increment\"\n        })}\n        onDecrement = {() => store.dispatch({\n            type: \"DECREMENT\",\n            text: \"decrement\"\n        })}\n    />, \n    rootElement\n)\n\nrender()\n\nstore.subscribe(render)","export default (state = 0 , action) =>{\n    switch (action.type){\n        case 'INCREMENT':\n            return state + 1\n        case 'DECREMENT':\n            return state - 1\n        default:\n            return state\n    }\n}"],"sourceRoot":""}